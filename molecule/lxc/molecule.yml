---
dependency:
  name: shell
  command: ansible-playbook molecule/lxc/dependency.yml

lint: |
  set -e
  ansible-lint roles/lxc_* molecule/**/*.yml
  yamllint .

driver:
  name: vagrant
  provider:
    name: virtualbox

platforms:
  - name: pve
    box: pve-current
    memory: 4096
    cpus: 4
    interfaces:
    # NET2 - Host-only net for ansible access
    - network_name: private_network
      type: static
      ip: "192.168.111.100/24"
    provider_raw_config_args:
    # Hardware-assisted nested virtualization for KVM guests
    - "customize ['modifyvm', :id, '--nested-hw-virt', 'on']"
    # Promiscious mode on NET2 to allow nested guests network access
    - "customize ['modifyvm', :id, '--nicpromisc2', 'allow-all']"
    # NET3 - internet access for guests
    - "customize ['modifyvm', :id, '--nic3', 'nat']"
    groups:
    - pve_nodes

provisioner:
  name: ansible
  config_options:
    defaults:
      host_key_checking: no
  inventory:
    hosts:
      all:
        children:
          # Containers created from the PVE-supplied images
          containers:
            hosts:
              192.168.111.200:
              192.168.111.201:
              192.168.111.202:
              192.168.111.203:
              192.168.111.204:
              192.168.111.205:
              192.168.111.206:
              192.168.111.207:
          # Containers created from our generated images using the containers above
          custom_containers:
            hosts:
              192.168.111.220:
              192.168.111.221:
              192.168.111.222:
              192.168.111.223:
              192.168.111.224:
              192.168.111.225:
              192.168.111.226:
              192.168.111.227:
    group_vars:
      all:
        # Prefix to differentiate between the provided and our generated template images
        lxcostemplate_custom_prefix: custom-
      pve_nodes:
        # Set the API address to the NET2 IP
        pve_api_host: '{{ ansible_vmbr0.ipv4.address }}'
        pve_api_password: molecule_test

verifier:
  name: ansible
