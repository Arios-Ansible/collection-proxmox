argument_specs:
  main:
    short_description: Installs and configures the Proxmox backup client on a supported system.
    description:
      - |
        The client is installed and configured for usage by the root user.
        Additionally, a backup job can be configured and scheduled.
      - |
        Requirements:

        - Ubuntu 20.04 or later
        - Debian 11 or later
        - Root access via `become: yes` or equivalent
      - |
        B(NOTE ON ENABLING ENCRYPTION:) Before you enable encryption, make sure to familiarize yourself with the way PBS handles encryption keys and passwords (see L(here,https://pbs.proxmox.com/docs/backup-client.html#encryption)).
        All encryption modes require you to somehow save the encryption keyfile/private key to a separate machine.
        B(The backup will become irrecoverable if you do not have a copy of the encryption key!)
    options:
      pbs_client_configure_backup:
        type: bool
        default: true
        description:
          - Whether to configure a backup task
          - If I(false), the PBS client will be installed with no further configuration done
      pbs_client_skip_install:
        type: bool
        default: false
        description:
          - When to I(true), this role will not attempt to install the backup client and instead just assume that it is already present.
          - This is useful if you already installed the backup client manually
      pbs_client_repository:
        type: str
        description:
          - Repository to backup to
          - "Format: C([[username@]server[:port]:]datastore)"
          - "Example: C(apps@pbs!mytoken@backuphost.example.org:datastore)"
      pbs_client_fingerprint:
        type: str
        description:
          - Fingerprint of the backup servers certificate
          - Used to verify self-signed certificates, not needed if your backup server has a valid CA certificate that is trusted by the client.
      pbs_client_password:
        type: str
        description:
          - Password or Token secret to authenticate with when talking to the backup server
      pbs_client_backup_archives:
        type: list
        elements: str
        description:
          - List of archive specifications as passed to the `backup` subcommand.
          - An archive specification has the format `name.type:/path`
          - Common types are `.pxar` and `.img`
          - "Example: C(['fs.pxar:/']) will create a file-based pxar archive of the root file system"
      pbs_client_include_mountpoints:
        description:
          - Include the following mountpoints into the backup
          - Must be a list of paths or C(all)
          - If set to a list, items must be paths as passed to the C(--include-dev) flag (see L(here,https://pbs.proxmox.com/docs/backup-client.html#creating-backups))
          - If set to C(all), the C(--all-file-systems) flag will be used to include all mounted filesystems in the path
        default: []
        type: list
        elements: str
      pbs_client_backup_id:
        type: str
        description:
          - Unique ID used to identify this backup group (see L(here,https://pbs.proxmox.com/docs/terminology.html#backup-group))
          - If undefined, the PBS default (hostname) is used
      pbs_client_encryption_mode:
        type: str
        choices: ["none", "keyfile", "rsa"]
        default: none
        description:
          - Select the type of client-side encryption that should be used to encrypt backups on the remote server
          - Note that this does not affect the backup transport security - PBS always uses TLS connections for transferring your backup.
          - When set to I(none), no encryption is used
          - When set to I(keyfile), an AES-256 encryption key is generated and saved on the client. This key is used to encrypt every backup archive. Please make sure to backup this keyfile to an external location. B(You will not be able to restore from backup without this key!). The key is stored without password protection to enable automatic backups.
          - When set to I(rsa), a keyfile is generated just as above, but a RSA public key is used to encrypt the backup keyfile, which is then appended to every backup. This allows you to restore from a backup with the private key and without needing to know the AES keyfile. This is especially useful if you want to reuse an existing RSA keypair. Please make sure to keep a copy of the private key corresponding to the public key around. B(You will not be able to restore from backup without this key!)
      pbs_client_encryption_pubkey:
        type: str
        description:
          - Public RSA key to use for encrypting the backup key
          - Must be in the string representation generated by PBS (C-----BEGIN PUBLIC KEY-----)...)
      pbs_client_schedule:
        type: str
        description:
          - Time at which to run the backup job, specified as a L(systemd time expression,https://www.freedesktop.org/software/systemd/man/systemd.time.html#)
          - "Examples: C(daily), C(Mon..Sun 1:30:00 UTC)"
        default: daily
      pbs_client_schedule_name:
        type: str
        default: proxmox-backup-client
        description:
          - Name of the systemd timer and unitfile that will be used to run the backup job
      pbs_client_schedule_randomdelay:
        type: int
        default: 1800
        description:
          - Random delay in seconds before the backup actually starts. Useful to prevent bursts of backup traffic from multiple hosts.
      pbs_client_schedule_persistent:
        type: bool
        default: true
        description:
          - Whether the backup task should be started immediately if the task did not run the previous time, for example because the host was shut down
      pbs_client_schedule_require_ac:
        type: bool
        default: false
        description:
          - Whether the backup should be skipped if no AC power is present.
          - This should work on all modern systems, but it is set to `false` by default just to be sure.
      pbs_client_on_error_units:
        type: list
        elements: str
        description:
          - List of systemd units to be started if the backup task fails
          - "Example: C(['mail-notify@i.service'])"
        default: []
